name: CI/CD - Build and Deploy p JAR

on:
  push:
    branches:
      - main  # Listen for pushes to main branch

jobs:
  build:
    name: Build JAR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: pet-tracker-review-app
          path: target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Build JAR
        run: mvn clean package -DskipTests

      - name: Check JAR file before SCP
        run: |
          if [ -f target/*.jar ]; then
            echo "JAR file found, proceeding with SCP."
            ls -la target/*.jar
          else
            echo "JAR file not found! Build might have failed."
            exit 1
          fi

      - name: Remove old JAR file on remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            if [ -f /home/project/affiliate/pet-tracker-review-1.0.0.jar ]; then
              echo "Removing old JAR file..."
              sudo rm /home/project/affiliate/pet-tracker-review-1.0.0.jar
            fi
            # Create directory if not exists
            sudo mkdir -p /home/project/affiliate
            sudo chown ${{ secrets.SERVER_USER }}:${{ secrets.SERVER_USER }} /home/project/affiliate

      - name: Deploy to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "target/*.jar"
          target: "/home/project/affiliate"

      - name: Restart Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/project/affiliate
            echo "Stopping old application..."
            # Stop existing Java process
            pkill -f "pet-tracker-review" || true
            sleep 5
            
            echo "Starting new application..."
            nohup java -jar target/pet-tracker-review-1.0.0.jar --server.port=8089 --spring.profiles.active=prod > app.log 2>&1 &
            
            echo "Deployment finished!"
            # Wait and check if application started
            sleep 10
            if pgrep -f "pet-tracker-review" > /dev/null; then
              echo "Application started successfully!"
            else
              echo "Application failed to start, check app.log"
              tail -20 app.log
            fi